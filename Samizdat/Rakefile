
require "pathname"
require 'set'

SRC_FOLDERS= [
	'.',
	'samlib',
]

LOCALIZED_XIBS = [
	'AddAuthorView',
	'AuthorInfoView',
	'CommentsView',
	'MainMenu',
]

def system_or_exit(cmd, stdout = nil)
  puts "Executing #{cmd}"
  cmd += " >#{stdout}" if stdout
  system(cmd) or raise "******** Build failed ********"
end

def makeLocalizable

 	outpath = Pathname.pwd + "en.lproj/Localizable.strings"

	r = /\"(.+)\"/	
	strings = Set.new
	if outpath.file?
		outpath.each_line do |line|
			strings += line.split("=")[0].scan(r)
		end	
	end

	#r = /locString\(@"([\w|\s]+)"\)/
	r = /locString\(@"(.+)"\)/
	newStrings = Set.new

	SRC_FOLDERS.each do |folder|
		srcpath = Pathname.pwd + folder
		if srcpath.directory?
			srcpath.children(false).each do |file|
				next unless ".m" == file.extname
				filepath = srcpath + file
		 		filepath.each_line do |line|  		 		
		 			line.scan(r).each do |s|
		 				newStrings += s unless strings.include?(s)
		 			end	
		 		end 
		  	end
		end  	
	 end 	
			
	unless newStrings.empty?		
		File.open(outpath, 'a') do |file| 
			file.puts "//generated by rake at #{Time.new}"
			newStrings.each do |s|
				file.puts "\"#{s}\" = \"#{s}\";" 
			end					
		end
	end	

	newStrings.length
end


desc 'Generate Localizable.strings'
task :localizable do |t|
  print ' * generate Localizable.strings' 
  n = makeLocalizable
  print ": append #{n} strings\n"
end

desc 'Generate .strings file from .xib'
task :stringsFromXib do |t|	
	LOCALIZED_XIBS.each do |xibName|
		ruStrings = "ru.lproj/#{xibName}.strings"
		xibFile = "en.lproj/#{xibName}.xib"
		Pathname.new(xibFile).file? or raise "******** No #{xibFile} ********"
		system_or_exit "ibtool --generate-strings-file #{ruStrings} #{xibFile}"	
	end	
end	

desc 'Generate localized .xib from .strings'
task :localizeXib do |t|	
	LOCALIZED_XIBS.each do |xibName|
		ruStrings = "ru.lproj/#{xibName}.strings"
		enXib = "en.lproj/#{xibName}.xib"
		ruXib = "ru.lproj/#{xibName}.xib"
		Pathname.new(ruStrings).file? or raise "******** No #{ruStrings} ********"
		Pathname.new(enXib).file? or raise "******** No #{enXib} ********"
		system_or_exit "ibtool --strings-file #{ruStrings} #{enXib} --write #{ruXib}"	
	end	
end	
